Terminals unused in grammar

    BREAK
    RETURN
    ELSE
    DOT
    OTHER
    AND
    OR


State 94 conflicts: 6 shift/reduce
State 95 conflicts: 6 shift/reduce
State 96 conflicts: 6 shift/reduce
State 97 conflicts: 6 shift/reduce
State 98 conflicts: 6 shift/reduce
State 99 conflicts: 6 shift/reduce


Grammar

    0 $accept: start $end

    1 start: function-definition
    2      | declaration
    3      | %empty

    4 declaration: direct-declarator SEMI
    5            | function-reference SEMI
    6            | error

    7 direct-declarator: ID '=' direct-declarator
    8                  | ID '=' function-reference
    9                  | ID COMMA direct-declarator
   10                  | NUM COMMA direct-declarator
   11                  | ID PLUS direct-declarator
   12                  | ID MINUS direct-declarator
   13                  | ID MULT direct-declarator
   14                  | ID DIV direct-declarator
   15                  | NUM PLUS direct-declarator
   16                  | NUM MINUS direct-declarator
   17                  | NUM MULT direct-declarator
   18                  | NUM DIV direct-declarator
   19                  | '(' direct-declarator ')'
   20                  | MINUS '(' direct-declarator ')'
   21                  | MINUS NUM
   22                  | MINUS ID
   23                  | NUM
   24                  | ID

   25 function-reference: ID '(' ')'
   26                   | ID '(' direct-declarator ')'

   27 function-definition: ID '(' initializer ')' compound-statement

   28 initializer: initializer-lis

   29 initializer-lis: initializer-lis COMMA declaration
   30                | declaration

   31 compound-statement: '{' statement-list '}'

   32 statement-list: statement-list statement
   33               | %empty

   34 statement: iteration-statement
   35          | declaration
   36          | for-statement
   37          | selection-statement
   38          | print-statement
   39          | SEMI

   40 iteration-statement: WHILE '(' expression ')' statement
   41                    | WHILE '(' expression ')' compound-statement

   42 for-statement: FOR '(' expression SEMI expression SEMI expression ')' statement
   43              | FOR '(' expression SEMI expression SEMI expression ')' compound-statement
   44              | FOR '(' expression ')' statement
   45              | FOR '(' expression ')' compound-statement

   46 selection-statement: IF '(' expression ')' statement

   47 print-statement: PRINTF '(' expression ')' SEMI

   48 expression: expression LE expression
   49           | expression GE expression
   50           | expression NE expression
   51           | expression EQ expression
   52           | expression GT expression
   53           | expression LT expression
   54           | direct-declarator
   55           | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 19 20 25 26 27 40 41 42 43 44 45 46 47
    ')' (41) 19 20 25 26 27 40 41 42 43 44 45 46 47
    '=' (61) 7 8
    '{' (123) 31
    '}' (125) 31
    error (256) 6
    FOR (258) 42 43 44 45
    WHILE (259) 40 41
    BREAK (260)
    RETURN (261)
    IF (262) 46
    ELSE (263)
    PRINTF (264) 47
    NUM (265) 10 15 16 17 18 21 23
    ID (266) 7 8 9 11 12 13 14 22 24 25 26 27
    DOT (267)
    COMMA (268) 9 10 29
    SEMI (269) 4 5 39 42 43 47
    OTHER (270)
    AND (271)
    OR (272)
    LE (273) 48
    GE (274) 49
    NE (275) 50
    LT (276) 53
    GT (277) 52
    PLUS (278) 11 15
    MINUS (279) 12 16 20 21 22
    MULT (280) 13 17
    DIV (281) 14 18
    EQ (282) 51


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    start (34)
        on left: 1 2 3
        on right: 0
    declaration (35)
        on left: 4 5 6
        on right: 2 29 30 35
    direct-declarator (36)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 4 7 9 10 11 12 13 14 15 16 17 18 19 20 26 54
    function-reference (37)
        on left: 25 26
        on right: 5 8
    function-definition (38)
        on left: 27
        on right: 1
    initializer (39)
        on left: 28
        on right: 27
    initializer-lis (40)
        on left: 29 30
        on right: 28 29
    compound-statement (41)
        on left: 31
        on right: 27 41 43 45
    statement-list (42)
        on left: 32 33
        on right: 31 32
    statement (43)
        on left: 34 35 36 37 38 39
        on right: 32 40 42 44 46
    iteration-statement (44)
        on left: 40 41
        on right: 34
    for-statement (45)
        on left: 42 43 44 45
        on right: 36
    selection-statement (46)
        on left: 46
        on right: 37
    print-statement (47)
        on left: 47
        on right: 38
    expression (48)
        on left: 48 49 50 51 52 53 54 55
        on right: 40 41 42 43 44 45 46 47 48 49 50 51 52 53


State 0

    0 $accept: . start $end

    error  shift, and go to state 1
    NUM    shift, and go to state 2
    ID     shift, and go to state 3
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $end  reduce using rule 3 (start)

    start                go to state 6
    declaration          go to state 7
    direct-declarator    go to state 8
    function-reference   go to state 9
    function-definition  go to state 10


State 1

    6 declaration: error .

    $default  reduce using rule 6 (declaration)


State 2

   10 direct-declarator: NUM . COMMA direct-declarator
   15                  | NUM . PLUS direct-declarator
   16                  | NUM . MINUS direct-declarator
   17                  | NUM . MULT direct-declarator
   18                  | NUM . DIV direct-declarator
   23                  | NUM .

    COMMA  shift, and go to state 11
    PLUS   shift, and go to state 12
    MINUS  shift, and go to state 13
    MULT   shift, and go to state 14
    DIV    shift, and go to state 15

    $default  reduce using rule 23 (direct-declarator)


State 3

    7 direct-declarator: ID . '=' direct-declarator
    8                  | ID . '=' function-reference
    9                  | ID . COMMA direct-declarator
   11                  | ID . PLUS direct-declarator
   12                  | ID . MINUS direct-declarator
   13                  | ID . MULT direct-declarator
   14                  | ID . DIV direct-declarator
   24                  | ID .
   25 function-reference: ID . '(' ')'
   26                   | ID . '(' direct-declarator ')'
   27 function-definition: ID . '(' initializer ')' compound-statement

    COMMA  shift, and go to state 16
    '='    shift, and go to state 17
    PLUS   shift, and go to state 18
    MINUS  shift, and go to state 19
    MULT   shift, and go to state 20
    DIV    shift, and go to state 21
    '('    shift, and go to state 22

    $default  reduce using rule 24 (direct-declarator)


State 4

   20 direct-declarator: MINUS . '(' direct-declarator ')'
   21                  | MINUS . NUM
   22                  | MINUS . ID

    NUM  shift, and go to state 23
    ID   shift, and go to state 24
    '('  shift, and go to state 25


State 5

   19 direct-declarator: '(' . direct-declarator ')'

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 27


State 6

    0 $accept: start . $end

    $end  shift, and go to state 28


State 7

    2 start: declaration .

    $default  reduce using rule 2 (start)


State 8

    4 declaration: direct-declarator . SEMI

    SEMI  shift, and go to state 29


State 9

    5 declaration: function-reference . SEMI

    SEMI  shift, and go to state 30


State 10

    1 start: function-definition .

    $default  reduce using rule 1 (start)


State 11

   10 direct-declarator: NUM COMMA . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 31


State 12

   15 direct-declarator: NUM PLUS . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 32


State 13

   16 direct-declarator: NUM MINUS . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 33


State 14

   17 direct-declarator: NUM MULT . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 34


State 15

   18 direct-declarator: NUM DIV . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 35


State 16

    9 direct-declarator: ID COMMA . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 36


State 17

    7 direct-declarator: ID '=' . direct-declarator
    8                  | ID '=' . function-reference

    NUM    shift, and go to state 2
    ID     shift, and go to state 37
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator   go to state 38
    function-reference  go to state 39


State 18

   11 direct-declarator: ID PLUS . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 40


State 19

   12 direct-declarator: ID MINUS . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 41


State 20

   13 direct-declarator: ID MULT . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 42


State 21

   14 direct-declarator: ID DIV . direct-declarator

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 43


State 22

   25 function-reference: ID '(' . ')'
   26                   | ID '(' . direct-declarator ')'
   27 function-definition: ID '(' . initializer ')' compound-statement

    error  shift, and go to state 1
    NUM    shift, and go to state 2
    ID     shift, and go to state 37
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5
    ')'    shift, and go to state 44

    declaration         go to state 45
    direct-declarator   go to state 46
    function-reference  go to state 9
    initializer         go to state 47
    initializer-lis     go to state 48


State 23

   21 direct-declarator: MINUS NUM .

    $default  reduce using rule 21 (direct-declarator)


State 24

   22 direct-declarator: MINUS ID .

    $default  reduce using rule 22 (direct-declarator)


State 25

   20 direct-declarator: MINUS '(' . direct-declarator ')'

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    direct-declarator  go to state 49


State 26

    7 direct-declarator: ID . '=' direct-declarator
    8                  | ID . '=' function-reference
    9                  | ID . COMMA direct-declarator
   11                  | ID . PLUS direct-declarator
   12                  | ID . MINUS direct-declarator
   13                  | ID . MULT direct-declarator
   14                  | ID . DIV direct-declarator
   24                  | ID .

    COMMA  shift, and go to state 16
    '='    shift, and go to state 17
    PLUS   shift, and go to state 18
    MINUS  shift, and go to state 19
    MULT   shift, and go to state 20
    DIV    shift, and go to state 21

    $default  reduce using rule 24 (direct-declarator)


State 27

   19 direct-declarator: '(' direct-declarator . ')'

    ')'  shift, and go to state 50


State 28

    0 $accept: start $end .

    $default  accept


State 29

    4 declaration: direct-declarator SEMI .

    $default  reduce using rule 4 (declaration)


State 30

    5 declaration: function-reference SEMI .

    $default  reduce using rule 5 (declaration)


State 31

   10 direct-declarator: NUM COMMA direct-declarator .

    $default  reduce using rule 10 (direct-declarator)


State 32

   15 direct-declarator: NUM PLUS direct-declarator .

    $default  reduce using rule 15 (direct-declarator)


State 33

   16 direct-declarator: NUM MINUS direct-declarator .

    $default  reduce using rule 16 (direct-declarator)


State 34

   17 direct-declarator: NUM MULT direct-declarator .

    $default  reduce using rule 17 (direct-declarator)


State 35

   18 direct-declarator: NUM DIV direct-declarator .

    $default  reduce using rule 18 (direct-declarator)


State 36

    9 direct-declarator: ID COMMA direct-declarator .

    $default  reduce using rule 9 (direct-declarator)


State 37

    7 direct-declarator: ID . '=' direct-declarator
    8                  | ID . '=' function-reference
    9                  | ID . COMMA direct-declarator
   11                  | ID . PLUS direct-declarator
   12                  | ID . MINUS direct-declarator
   13                  | ID . MULT direct-declarator
   14                  | ID . DIV direct-declarator
   24                  | ID .
   25 function-reference: ID . '(' ')'
   26                   | ID . '(' direct-declarator ')'

    COMMA  shift, and go to state 16
    '='    shift, and go to state 17
    PLUS   shift, and go to state 18
    MINUS  shift, and go to state 19
    MULT   shift, and go to state 20
    DIV    shift, and go to state 21
    '('    shift, and go to state 51

    $default  reduce using rule 24 (direct-declarator)


State 38

    7 direct-declarator: ID '=' direct-declarator .

    $default  reduce using rule 7 (direct-declarator)


State 39

    8 direct-declarator: ID '=' function-reference .

    $default  reduce using rule 8 (direct-declarator)


State 40

   11 direct-declarator: ID PLUS direct-declarator .

    $default  reduce using rule 11 (direct-declarator)


State 41

   12 direct-declarator: ID MINUS direct-declarator .

    $default  reduce using rule 12 (direct-declarator)


State 42

   13 direct-declarator: ID MULT direct-declarator .

    $default  reduce using rule 13 (direct-declarator)


State 43

   14 direct-declarator: ID DIV direct-declarator .

    $default  reduce using rule 14 (direct-declarator)


State 44

   25 function-reference: ID '(' ')' .

    $default  reduce using rule 25 (function-reference)


State 45

   30 initializer-lis: declaration .

    $default  reduce using rule 30 (initializer-lis)


State 46

    4 declaration: direct-declarator . SEMI
   26 function-reference: ID '(' direct-declarator . ')'

    SEMI  shift, and go to state 29
    ')'   shift, and go to state 52


State 47

   27 function-definition: ID '(' initializer . ')' compound-statement

    ')'  shift, and go to state 53


State 48

   28 initializer: initializer-lis .
   29 initializer-lis: initializer-lis . COMMA declaration

    COMMA  shift, and go to state 54

    $default  reduce using rule 28 (initializer)


State 49

   20 direct-declarator: MINUS '(' direct-declarator . ')'

    ')'  shift, and go to state 55


State 50

   19 direct-declarator: '(' direct-declarator ')' .

    $default  reduce using rule 19 (direct-declarator)


State 51

   25 function-reference: ID '(' . ')'
   26                   | ID '(' . direct-declarator ')'

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5
    ')'    shift, and go to state 44

    direct-declarator  go to state 56


State 52

   26 function-reference: ID '(' direct-declarator ')' .

    $default  reduce using rule 26 (function-reference)


State 53

   27 function-definition: ID '(' initializer ')' . compound-statement

    '{'  shift, and go to state 57

    compound-statement  go to state 58


State 54

   29 initializer-lis: initializer-lis COMMA . declaration

    error  shift, and go to state 1
    NUM    shift, and go to state 2
    ID     shift, and go to state 37
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    declaration         go to state 59
    direct-declarator   go to state 8
    function-reference  go to state 9


State 55

   20 direct-declarator: MINUS '(' direct-declarator ')' .

    $default  reduce using rule 20 (direct-declarator)


State 56

   26 function-reference: ID '(' direct-declarator . ')'

    ')'  shift, and go to state 52


State 57

   31 compound-statement: '{' . statement-list '}'

    $default  reduce using rule 33 (statement-list)

    statement-list  go to state 60


State 58

   27 function-definition: ID '(' initializer ')' compound-statement .

    $default  reduce using rule 27 (function-definition)


State 59

   29 initializer-lis: initializer-lis COMMA declaration .

    $default  reduce using rule 29 (initializer-lis)


State 60

   31 compound-statement: '{' statement-list . '}'
   32 statement-list: statement-list . statement

    error   shift, and go to state 1
    FOR     shift, and go to state 61
    WHILE   shift, and go to state 62
    IF      shift, and go to state 63
    PRINTF  shift, and go to state 64
    NUM     shift, and go to state 2
    ID      shift, and go to state 37
    SEMI    shift, and go to state 65
    MINUS   shift, and go to state 4
    '('     shift, and go to state 5
    '}'     shift, and go to state 66

    declaration          go to state 67
    direct-declarator    go to state 8
    function-reference   go to state 9
    statement            go to state 68
    iteration-statement  go to state 69
    for-statement        go to state 70
    selection-statement  go to state 71
    print-statement      go to state 72


State 61

   42 for-statement: FOR . '(' expression SEMI expression SEMI expression ')' statement
   43              | FOR . '(' expression SEMI expression SEMI expression ')' compound-statement
   44              | FOR . '(' expression ')' statement
   45              | FOR . '(' expression ')' compound-statement

    '('  shift, and go to state 73


State 62

   40 iteration-statement: WHILE . '(' expression ')' statement
   41                    | WHILE . '(' expression ')' compound-statement

    '('  shift, and go to state 74


State 63

   46 selection-statement: IF . '(' expression ')' statement

    '('  shift, and go to state 75


State 64

   47 print-statement: PRINTF . '(' expression ')' SEMI

    '('  shift, and go to state 76


State 65

   39 statement: SEMI .

    $default  reduce using rule 39 (statement)


State 66

   31 compound-statement: '{' statement-list '}' .

    $default  reduce using rule 31 (compound-statement)


State 67

   35 statement: declaration .

    $default  reduce using rule 35 (statement)


State 68

   32 statement-list: statement-list statement .

    $default  reduce using rule 32 (statement-list)


State 69

   34 statement: iteration-statement .

    $default  reduce using rule 34 (statement)


State 70

   36 statement: for-statement .

    $default  reduce using rule 36 (statement)


State 71

   37 statement: selection-statement .

    $default  reduce using rule 37 (statement)


State 72

   38 statement: print-statement .

    $default  reduce using rule 38 (statement)


State 73

   42 for-statement: FOR '(' . expression SEMI expression SEMI expression ')' statement
   43              | FOR '(' . expression SEMI expression SEMI expression ')' compound-statement
   44              | FOR '(' . expression ')' statement
   45              | FOR '(' . expression ')' compound-statement

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 78


State 74

   40 iteration-statement: WHILE '(' . expression ')' statement
   41                    | WHILE '(' . expression ')' compound-statement

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 79


State 75

   46 selection-statement: IF '(' . expression ')' statement

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 80


State 76

   47 print-statement: PRINTF '(' . expression ')' SEMI

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 81


State 77

   54 expression: direct-declarator .

    $default  reduce using rule 54 (expression)


State 78

   42 for-statement: FOR '(' expression . SEMI expression SEMI expression ')' statement
   43              | FOR '(' expression . SEMI expression SEMI expression ')' compound-statement
   44              | FOR '(' expression . ')' statement
   45              | FOR '(' expression . ')' compound-statement
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    SEMI  shift, and go to state 82
    LE    shift, and go to state 83
    GE    shift, and go to state 84
    NE    shift, and go to state 85
    LT    shift, and go to state 86
    GT    shift, and go to state 87
    EQ    shift, and go to state 88
    ')'   shift, and go to state 89


State 79

   40 iteration-statement: WHILE '(' expression . ')' statement
   41                    | WHILE '(' expression . ')' compound-statement
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE   shift, and go to state 83
    GE   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    EQ   shift, and go to state 88
    ')'  shift, and go to state 90


State 80

   46 selection-statement: IF '(' expression . ')' statement
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE   shift, and go to state 83
    GE   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    EQ   shift, and go to state 88
    ')'  shift, and go to state 91


State 81

   47 print-statement: PRINTF '(' expression . ')' SEMI
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE   shift, and go to state 83
    GE   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    EQ   shift, and go to state 88
    ')'  shift, and go to state 92


State 82

   42 for-statement: FOR '(' expression SEMI . expression SEMI expression ')' statement
   43              | FOR '(' expression SEMI . expression SEMI expression ')' compound-statement

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 93


State 83

   48 expression: expression LE . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 94


State 84

   49 expression: expression GE . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 95


State 85

   50 expression: expression NE . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 96


State 86

   53 expression: expression LT . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 97


State 87

   52 expression: expression GT . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 98


State 88

   51 expression: expression EQ . expression

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 99


State 89

   44 for-statement: FOR '(' expression ')' . statement
   45              | FOR '(' expression ')' . compound-statement

    error   shift, and go to state 1
    FOR     shift, and go to state 61
    WHILE   shift, and go to state 62
    IF      shift, and go to state 63
    PRINTF  shift, and go to state 64
    NUM     shift, and go to state 2
    ID      shift, and go to state 37
    SEMI    shift, and go to state 65
    MINUS   shift, and go to state 4
    '('     shift, and go to state 5
    '{'     shift, and go to state 57

    declaration          go to state 67
    direct-declarator    go to state 8
    function-reference   go to state 9
    compound-statement   go to state 100
    statement            go to state 101
    iteration-statement  go to state 69
    for-statement        go to state 70
    selection-statement  go to state 71
    print-statement      go to state 72


State 90

   40 iteration-statement: WHILE '(' expression ')' . statement
   41                    | WHILE '(' expression ')' . compound-statement

    error   shift, and go to state 1
    FOR     shift, and go to state 61
    WHILE   shift, and go to state 62
    IF      shift, and go to state 63
    PRINTF  shift, and go to state 64
    NUM     shift, and go to state 2
    ID      shift, and go to state 37
    SEMI    shift, and go to state 65
    MINUS   shift, and go to state 4
    '('     shift, and go to state 5
    '{'     shift, and go to state 57

    declaration          go to state 67
    direct-declarator    go to state 8
    function-reference   go to state 9
    compound-statement   go to state 102
    statement            go to state 103
    iteration-statement  go to state 69
    for-statement        go to state 70
    selection-statement  go to state 71
    print-statement      go to state 72


State 91

   46 selection-statement: IF '(' expression ')' . statement

    error   shift, and go to state 1
    FOR     shift, and go to state 61
    WHILE   shift, and go to state 62
    IF      shift, and go to state 63
    PRINTF  shift, and go to state 64
    NUM     shift, and go to state 2
    ID      shift, and go to state 37
    SEMI    shift, and go to state 65
    MINUS   shift, and go to state 4
    '('     shift, and go to state 5

    declaration          go to state 67
    direct-declarator    go to state 8
    function-reference   go to state 9
    statement            go to state 104
    iteration-statement  go to state 69
    for-statement        go to state 70
    selection-statement  go to state 71
    print-statement      go to state 72


State 92

   47 print-statement: PRINTF '(' expression ')' . SEMI

    SEMI  shift, and go to state 105


State 93

   42 for-statement: FOR '(' expression SEMI expression . SEMI expression ')' statement
   43              | FOR '(' expression SEMI expression . SEMI expression ')' compound-statement
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    SEMI  shift, and go to state 106
    LE    shift, and go to state 83
    GE    shift, and go to state 84
    NE    shift, and go to state 85
    LT    shift, and go to state 86
    GT    shift, and go to state 87
    EQ    shift, and go to state 88


State 94

   48 expression: expression . LE expression
   48           | expression LE expression .
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 48 (expression)]
    GE        [reduce using rule 48 (expression)]
    NE        [reduce using rule 48 (expression)]
    LT        [reduce using rule 48 (expression)]
    GT        [reduce using rule 48 (expression)]
    EQ        [reduce using rule 48 (expression)]
    $default  reduce using rule 48 (expression)


State 95

   48 expression: expression . LE expression
   49           | expression . GE expression
   49           | expression GE expression .
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 49 (expression)]
    GE        [reduce using rule 49 (expression)]
    NE        [reduce using rule 49 (expression)]
    LT        [reduce using rule 49 (expression)]
    GT        [reduce using rule 49 (expression)]
    EQ        [reduce using rule 49 (expression)]
    $default  reduce using rule 49 (expression)


State 96

   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   50           | expression NE expression .
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 50 (expression)]
    GE        [reduce using rule 50 (expression)]
    NE        [reduce using rule 50 (expression)]
    LT        [reduce using rule 50 (expression)]
    GT        [reduce using rule 50 (expression)]
    EQ        [reduce using rule 50 (expression)]
    $default  reduce using rule 50 (expression)


State 97

   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression
   53           | expression LT expression .

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 53 (expression)]
    GE        [reduce using rule 53 (expression)]
    NE        [reduce using rule 53 (expression)]
    LT        [reduce using rule 53 (expression)]
    GT        [reduce using rule 53 (expression)]
    EQ        [reduce using rule 53 (expression)]
    $default  reduce using rule 53 (expression)


State 98

   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   52           | expression GT expression .
   53           | expression . LT expression

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 52 (expression)]
    GE        [reduce using rule 52 (expression)]
    NE        [reduce using rule 52 (expression)]
    LT        [reduce using rule 52 (expression)]
    GT        [reduce using rule 52 (expression)]
    EQ        [reduce using rule 52 (expression)]
    $default  reduce using rule 52 (expression)


State 99

   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   51           | expression EQ expression .
   52           | expression . GT expression
   53           | expression . LT expression

    LE  shift, and go to state 83
    GE  shift, and go to state 84
    NE  shift, and go to state 85
    LT  shift, and go to state 86
    GT  shift, and go to state 87
    EQ  shift, and go to state 88

    LE        [reduce using rule 51 (expression)]
    GE        [reduce using rule 51 (expression)]
    NE        [reduce using rule 51 (expression)]
    LT        [reduce using rule 51 (expression)]
    GT        [reduce using rule 51 (expression)]
    EQ        [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)


State 100

   45 for-statement: FOR '(' expression ')' compound-statement .

    $default  reduce using rule 45 (for-statement)


State 101

   44 for-statement: FOR '(' expression ')' statement .

    $default  reduce using rule 44 (for-statement)


State 102

   41 iteration-statement: WHILE '(' expression ')' compound-statement .

    $default  reduce using rule 41 (iteration-statement)


State 103

   40 iteration-statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 40 (iteration-statement)


State 104

   46 selection-statement: IF '(' expression ')' statement .

    $default  reduce using rule 46 (selection-statement)


State 105

   47 print-statement: PRINTF '(' expression ')' SEMI .

    $default  reduce using rule 47 (print-statement)


State 106

   42 for-statement: FOR '(' expression SEMI expression SEMI . expression ')' statement
   43              | FOR '(' expression SEMI expression SEMI . expression ')' compound-statement

    NUM    shift, and go to state 2
    ID     shift, and go to state 26
    MINUS  shift, and go to state 4
    '('    shift, and go to state 5

    $default  reduce using rule 55 (expression)

    direct-declarator  go to state 77
    expression         go to state 107


State 107

   42 for-statement: FOR '(' expression SEMI expression SEMI expression . ')' statement
   43              | FOR '(' expression SEMI expression SEMI expression . ')' compound-statement
   48 expression: expression . LE expression
   49           | expression . GE expression
   50           | expression . NE expression
   51           | expression . EQ expression
   52           | expression . GT expression
   53           | expression . LT expression

    LE   shift, and go to state 83
    GE   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    EQ   shift, and go to state 88
    ')'  shift, and go to state 108


State 108

   42 for-statement: FOR '(' expression SEMI expression SEMI expression ')' . statement
   43              | FOR '(' expression SEMI expression SEMI expression ')' . compound-statement

    error   shift, and go to state 1
    FOR     shift, and go to state 61
    WHILE   shift, and go to state 62
    IF      shift, and go to state 63
    PRINTF  shift, and go to state 64
    NUM     shift, and go to state 2
    ID      shift, and go to state 37
    SEMI    shift, and go to state 65
    MINUS   shift, and go to state 4
    '('     shift, and go to state 5
    '{'     shift, and go to state 57

    declaration          go to state 67
    direct-declarator    go to state 8
    function-reference   go to state 9
    compound-statement   go to state 109
    statement            go to state 110
    iteration-statement  go to state 69
    for-statement        go to state 70
    selection-statement  go to state 71
    print-statement      go to state 72


State 109

   43 for-statement: FOR '(' expression SEMI expression SEMI expression ')' compound-statement .

    $default  reduce using rule 43 (for-statement)


State 110

   42 for-statement: FOR '(' expression SEMI expression SEMI expression ')' statement .

    $default  reduce using rule 42 (for-statement)
